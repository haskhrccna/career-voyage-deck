name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    env:
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SERVER_USER: ${{ secrets.SERVER_USER }}
      DEPLOY_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Debug - Create and verify page components
        run: |
          # Create pages directory
          mkdir -p src/pages
          
          # Create Index.tsx
          cat > src/pages/Index.tsx << 'EOL'
          import React from 'react';
          
          const Index = () => {
            return (
              <div className="container mx-auto px-4 py-8">
                <h1 className="text-4xl font-bold text-white mb-6">
                  Welcome to Career Voyage Deck
                </h1>
                <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                  <div className="bg-slate-800 rounded-lg p-6">
                    <h2 className="text-2xl font-semibold text-white mb-4">
                      Explore Your Career Journey
                    </h2>
                    <p className="text-slate-300">
                      Visualize and plan your professional growth with our interactive tools and resources.
                    </p>
                  </div>
                </div>
              </div>
            );
          };
          
          export default Index;
          EOL
          
          # Create Contact.tsx
          cat > src/pages/Contact.tsx << 'EOL'
          import React from 'react';
          import { toast } from '../components/ui/use-toast';
          
          const Contact = () => {
            const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
              e.preventDefault();
              try {
                toast({
                  title: "Message sent!",
                  description: "We'll get back to you as soon as possible.",
                });
              } catch (error) {
                toast({
                  title: "Error",
                  description: "Failed to send message. Please try again.",
                  variant: "destructive",
                });
              }
            };
          
            return (
              <div className="container mx-auto px-4 py-8">
                <h1 className="text-4xl font-bold text-white mb-6">Contact Us</h1>
                <div className="max-w-2xl mx-auto">
                  <form onSubmit={handleSubmit} className="space-y-6">
                    <div className="space-y-2">
                      <label htmlFor="name" className="text-white">Name</label>
                      <input
                        type="text"
                        id="name"
                        name="name"
                        required
                        className="w-full p-2 rounded-md bg-slate-800 text-white border border-slate-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
                      />
                    </div>
                    <div className="space-y-2">
                      <label htmlFor="email" className="text-white">Email</label>
                      <input
                        type="email"
                        id="email"
                        name="email"
                        required
                        className="w-full p-2 rounded-md bg-slate-800 text-white border border-slate-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
                      />
                    </div>
                    <div className="space-y-2">
                      <label htmlFor="message" className="text-white">Message</label>
                      <textarea
                        id="message"
                        name="message"
                        required
                        rows={4}
                        className="w-full p-2 rounded-md bg-slate-800 text-white border border-slate-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
                      />
                    </div>
                    <button
                      type="submit"
                      className="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors"
                    >
                      Send Message
                    </button>
                  </form>
                </div>
              </div>
            );
          };
          
          export default Contact;
          EOL
          
          # Verify file creation and structure
          echo "Checking file structure:"
          ls -la src/pages/
          
          echo "File contents of Index.tsx:"
          cat src/pages/Index.tsx
          
          echo "File contents of Contact.tsx:"
          cat src/pages/Contact.tsx

      - name: Build
        run: |
          npm run build
          ls -la dist/
