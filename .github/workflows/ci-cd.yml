name: CI/CD Pipeline
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    env:
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SERVER_USER: ${{ secrets.SERVER_USER }}
      DEPLOY_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: |
        echo "Building application..."
        npm run build
        echo "Build complete. Checking dist directory:"
        ls -la dist/
    
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
    
    - name: Deploy to Production
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        # Verify we have the dist directory
        if [ ! -d "dist" ]; then
          echo "dist directory not found!"
          ls -la
          exit 1
        fi

        # Setup SSH
        mkdir -p ~/.ssh
        echo "$DEPLOY_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H "$SERVER_IP" >> ~/.ssh/known_hosts
        
        # Create directory structure on server
        ssh -i ~/.ssh/deploy_key $SERVER_USER@$SERVER_IP '
          sudo mkdir -p /app/dist
          sudo chown -R $USER:$USER /app
        '
        
        # Copy configuration files
        scp -i ~/.ssh/deploy_key \
          docker-compose.yml \
          Dockerfile \
          nginx.conf \
          init.sql \
          .env \
          package.json \
          package-lock.json \
          $SERVER_USER@$SERVER_IP:/app/
          
        # Copy the built application
        echo "Copying dist directory..."
        scp -i ~/.ssh/deploy_key -r \
          dist/* \
          $SERVER_USER@$SERVER_IP:/app/dist/
        
        # Verify files were copied
        ssh -i ~/.ssh/deploy_key $SERVER_USER@$SERVER_IP '
          echo "Contents of /app:"
          ls -la /app
          echo "Contents of /app/dist:"
          ls -la /app/dist
        '
        
        # Deploy
        ssh -i ~/.ssh/deploy_key $SERVER_USER@$SERVER_IP '
          cd /app
          docker-compose down
          docker-compose up --build -d
        '
        
    - name: Send Deployment Status Email
      if: always()
      run: |
        curl -X POST \
        -H "Authorization: Bearer $RESEND_API_KEY" \
        -H "Content-Type: application/json" \
        https://api.resend.com/emails \
        -d '{
          "from": "notifications@hassan-adam.com",
          "to": "haskhr@hotmail.com",
          "subject": "Deployment Status: ${{ job.status }}",
          "html": "Deployment Status: ${{ job.status }}<br>Repository: ${{ github.repository }}<br>Commit: ${{ github.sha }}<br>Triggered by: ${{ github.actor }}<br><br>View the deployment logs at:<br>https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        }'
