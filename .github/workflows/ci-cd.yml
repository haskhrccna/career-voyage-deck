name: CI/CD Pipeline
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    env:
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SERVER_USER: ${{ secrets.SERVER_USER }}
      DEPLOY_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: |
        npm run build
        ls -la dist/
    
    - name: Setup SSH and Deploy
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        # Previous SSH setup...
        
        # Create and verify app directory
        echo "Creating app directory..."
        ssh -i ~/.ssh/deploy_key "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}" '
          sudo mkdir -p /app
          sudo chown -R ubuntu:ubuntu /app
          ls -la /app
        '

        # Copy configuration files with verification
        echo "Copying configuration files..."
        for file in docker-compose.yml Dockerfile nginx.conf init.sql .env package.json package-lock.json; do
          if [ -f "$file" ]; then
            echo "Copying $file..."
            scp -i ~/.ssh/deploy_key "$file" "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/app/"
          else
            echo "Warning: $file not found"
          fi
        done

        # Verify config files copied
        echo "Verifying config files..."
        ssh -i ~/.ssh/deploy_key "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}" '
          echo "Files in /app:"
          ls -la /app
        '

        # Copy dist directory with verification
        echo "Copying dist directory..."
        if [ -d "dist" ]; then
          scp -i ~/.ssh/deploy_key -r dist/* "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/app/dist/"
          
          echo "Verifying dist directory..."
          ssh -i ~/.ssh/deploy_key "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}" '
            echo "Files in /app/dist:"
            ls -la /app/dist
          '
        else
          echo "Error: dist directory not found"
          exit 1
        fi

        # Deploy with status checks
        echo "Starting deployment..."
        ssh -i ~/.ssh/deploy_key "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}" '
          cd /app
          echo "Stopping existing containers..."
          docker-compose down
          
          echo "Building new containers..."
          docker-compose build --no-cache
          
          echo "Starting containers..."
          docker-compose up -d
          
          echo "Verifying containers..."
          docker ps
          
          echo "Checking container logs..."
          docker-compose logs
        '
        
    - name: Send Deployment Status Email
      if: always()
      run: |
        if [ -n "$RESEND_API_KEY" ]; then
          curl -X POST \
          -H "Authorization: Bearer $RESEND_API_KEY" \
          -H "Content-Type: application/json" \
          https://api.resend.com/emails \
          -d '{
            "from": "notifications@hassan-adam.com",
            "to": "haskhr@hotmail.com",
            "subject": "Deployment Status: ${{ job.status }}",
            "html": "Deployment Status: ${{ job.status }}<br>Repository: ${{ github.repository }}<br>Commit: ${{ github.sha }}<br>Triggered by: ${{ github.actor }}"
          }'
        else
          echo "RESEND_API_KEY not set, skipping email notification"
        fi
