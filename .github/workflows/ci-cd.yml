name: CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SERVER_USER: ${{ secrets.SERVER_USER }}
      DEPLOY_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build
        run: |
          npm run build
          ls -la dist/
          
      - name: Setup SSH and Deploy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          # ... (previous SSH setup remains the same)
          
          echo "Starting application using Docker Compose..."
          ssh -i ~/.ssh/deploy_key "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}" '
            cd /app
            
            # Clean up any existing containers and volumes
            docker-compose down -v
            
            # Pull latest images
            DOCKER_DEFAULT_PLATFORM=linux/arm64/v8 docker-compose pull
            
            # Start services
            DOCKER_DEFAULT_PLATFORM=linux/arm64/v8 docker-compose up -d --build --force-recreate
            
            # Wait for services to start
            echo "Waiting for services to start..."
            sleep 30
            
            # Check container logs
            echo "Checking container logs..."
            docker-compose logs
            
            # Check specific service logs
            echo "Checking nginx service logs..."
            docker-compose logs nginx
            echo "Checking app service logs..."
            docker-compose logs app
            
            # Check service health
            echo "Checking service health..."
            docker-compose ps
            
            # Test nginx configuration
            echo "Testing nginx configuration..."
            docker-compose exec -T nginx nginx -t
            
            # Test HTTP connection
            echo "Testing HTTP connection..."
            curl -v http://localhost
          '
      
      - name: Send Deployment Status Email
        if: always()
        run: |
          if [ -n "$RESEND_API_KEY" ]; then
            curl -X POST \
            -H "Authorization: Bearer $RESEND_API_KEY" \
            -H "Content-Type: application/json" \
            https://api.resend.com/emails \
            -d '{
              "from": "notifications@hassan-adam.com",
              "to": "haskhr@hotmail.com",
              "subject": "Deployment Status: ${{ job.status }}",
              "html": "Deployment Status: ${{ job.status }}<br>Repository: ${{ github.repository }}<br>Commit: ${{ github.sha }}<br>Triggered by: ${{ github.actor }}"
            }'
          else
            echo "RESEND_API_KEY not set, skipping email notification"
          fi
