# Main server block for both HTTP and HTTPS
server {
    listen 80;
    server_name www.hassan-adam.com hassan-adam.com;
    
    # Redirect HTTP to HTTPS if using Cloudflare
    if ($http_x_forwarded_proto != "https") {
        return 301 https://$host$request_uri;
    }
    
    root /usr/share/nginx/html;
    index index.html;

    # Error and access logging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log combined;

    # Cloudflare IPs
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    real_ip_header CF-Connecting-IP;

    # Root location handler
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Handle JavaScript files
    location /assets/js/ {
        alias /usr/share/nginx/html/assets/js/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Handle CSS files
    location /assets/css/ {
        alias /usr/share/nginx/html/assets/css/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Handle images
    location /assets/images {
        alias /usr/share/nginx/html/assets/images;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Handle other static assets
    location /assets {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # CORS headers
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' '*' always;

    # Optimize for single page app
    location ~* \.(?:manifest|appcache|html?|xml|json)$ {
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }
}