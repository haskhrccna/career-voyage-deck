version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        TARGETARCH: arm64
    expose:
      - "80"
    volumes:
      - ./dist:/usr/share/nginx/html:ro
    networks:
      - app_network
    restart: always
    environment:
      - NGINX_HOST=www.hassan-adam.com
      - NGINX_PORT=80
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
  
  nginx:
    image: nginx:stable
    platform: linux/arm64/v8
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./dist:/usr/share/nginx/html:ro
    networks:
      - app_network
    restart: always
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
  
  db:
    image: postgres:15
    platform: linux/arm64/v8
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  app_network:
    driver: bridge
  
volumes:
  postgres_data:
